{
    "Description" : "A Knowledge Tree Asgard Server. This configuration deploys an Asgard application to an EC2 instance.",

    "Resources": {
        "IPAddress": {
            "Type": "AWS::EC2::EIP"
        },
        "Ec2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "SecurityGroups": [
                    {
                        "Ref": "TomcatSecurityGroup"
                    },
                    {
                        "Ref": "SSHSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType" : "m1.small",
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "date > /home/ec2-user/starttime\n",
                                "yum -y update\n",
                                "yum -y install git libxml2-devel gcc gcc-c++ automake autoconf make curl dmidecode\n",
                                "wget https://s3.amazonaws.com/stelligent-blog/asgard/ruby-1.9.3p0-2.amzn1.x86_64.rpm -O /home/ec2-user/ruby-1.9.3p0-2.amzn1.x86_64.rpm\n",
                                "rpm -Uvhf /home/ec2-user/ruby-1.9.3p0-2.amzn1.x86_64.rpm\n",
                                "gem install chef --no-ri --no-rdoc\n",
                                "git clone git@github.com:ktgit/asgard-in-the-cloud.git /home/ec2-user/asgard-in-the-cloud\n",
                                "git clone https://github.com/fnichol/chef-user.git /home/ec2-user/asgard-in-the-cloud/chef/cookbooks/user\n",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "cat /home/ec2-user/asgard-in-the-cloud/solo.source | sed 's/insertpasswordhere/",
                                            {
                                                "Ref": "Password"
                                            },
                                            "/g' | sed 's/insertusernamehere/",
                                            {
                                                "Ref": "Username"
                                            },
                                            "/g' > /home/ec2-user/asgard-in-the-cloud/solo.json\n"
                                        ]
                                    ]
                                },
                                "chef-solo -c /home/ec2-user/asgard-in-the-cloud/solo.rb -j /home/ec2-user/asgard-in-the-cloud/solo.json -l debug\n",
                                "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\" : \"SUCCESS\",",
                                   "\"Reason\" : \"The application is ready\",",
                                   "\"UniqueId\" : \"asgard\",",
                                   "\"Data\" : \"Done\"}' ",
                                   "\"", {"Ref" : "WaitForInstanceWaitHandle"},"\"\n",
                                "date > /home/ec2-user/stoptime\n"
                            ]
                        ]
                    }
                }
            }
        },

        "TomcatSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow access to the server via Tomcat",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "SSHSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow access to the server via SSH",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "WaitForInstanceWaitHandle" : {
          "Type" : "AWS::CloudFormation::WaitConditionHandle",
          "Properties" : {
          }
        },
        "WaitForInstance" : {
          "Type" : "AWS::CloudFormation::WaitCondition",
          "DependsOn" : "Ec2Instance",
          "Properties" : {
            "Handle" : {"Ref" : "WaitForInstanceWaitHandle"},
            "Timeout" : "600"
          }
        }
      },
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "AMI": "ami-05355a6c"
            },
            "us-west-1": {
                "AMI": "ami-3ffed17a"
            },
            "us-west-2": {
                "AMI": "ami-0358ce33"
            },
            "eu-west-1": {
                "AMI": "ami-c7c0d6b3"
            },
            "ap-southeast-1": {
                "AMI": "ami-fade91a8"
            },
            "ap-northeast-1": {
                "AMI": "ami-39b23d38"
            },
            "sa-east-1": {
                "AMI": "ami-5253894f"
            }
        }
    },
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access into the server",
            "Type": "String"
        },
        "Password": {
            "Description": "Password to access your Asgard instance",
            "Type": "String",
            "NoEcho": "TRUE",
            "AllowedPattern": "[^/]*"
        },
        "Username": {
            "Description": "Username to access your Asgard instance",
            "Type": "String"
        }
    },
    "Outputs": {
        "Address": { 
            "Value": {
                "Fn::GetAtt": ["Ec2Instance","PublicDnsName"]
            }
        },  
        "AsgardURL": {
            "Value": {
                "Fn::Join": ["",["http://",{"Fn::GetAtt": ["Ec2Instance","PublicDnsName"]},":8080/asgard"]]
            }
        }
    }
}
